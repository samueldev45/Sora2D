{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Sora2D Documentation About Sora2D is a pygame based framework for making games easily, made by Samuel Andrade. Alpha Version (Current) ECS System Display Window Asset Manager Keyboard and Mouse Inputs Audio System Scene System Renderer Beta Version Scene Script Tiled maps Support Camera Animation System Light System Physics Particle System 1.0 Version UI System","title":"Home"},{"location":"#welcome-to-sora2d-documentation","text":"","title":"Welcome to Sora2D Documentation"},{"location":"#about","text":"Sora2D is a pygame based framework for making games easily, made by Samuel Andrade.","title":"About"},{"location":"#alpha-version-current","text":"ECS System Display Window Asset Manager Keyboard and Mouse Inputs Audio System Scene System Renderer","title":"Alpha Version (Current)"},{"location":"#beta-version","text":"Scene Script Tiled maps Support Camera Animation System Light System Physics Particle System","title":"Beta Version"},{"location":"#10-version","text":"UI System","title":"1.0 Version"},{"location":"core/","text":"Core core.Actor Variables name : str properties : dict started = bool scene : core.Scene # Transform properties position : math.Vector2 scale : math.Vector2 rotation : int # Sprite properties image : str color : tuple zIndex : int Methods __init__([optional] name : str) # components add(*component : core.Component) get(component : str) -> core.Component remove(component : str) # tag addTag(tag : str) hasTag(tag : str) -> bool removeTag(tag : str) getId() -> int start() update() end() core.AssetManager Variables Methods # image loadImage(name : str, filePath : str) getImage(name : str) -> pygame.Surface deleteImage(name : str) # sound loadSound(name : str, filePath : str) getSound(name : str) -> pygame.mixer.Sound deleteSound(name : str) core.Component Variables name : str args : dict actor : core.Actor Methods __init__(name : str, [optional] args : dict) start() update() core.Scene Variables name : str window : core.Window background : tuple Methods __init__([optional], name : str) # actor add(*actor : core.Actor) remove(actorId : int) get(actorId : int) -> core.Actor get(name : str) -> core.Actor getActors() -> list [core.Actor] start() update() core.Window Variables assets : core.AssetManager fps : 60 pygameEvents : list [pygame.event] mouse : input.Mouse keyboard : input.Keyboard Methods __init__(assets : core.AssetManager) # scene setScene(scene : core.Scene) getScene() -> core.Scene # sound playSound(name : str, volume : float) stopSound(name : str) create(width : int, height : int, title : str, [optional] flags : int) events() update() render() mainLoop()","title":"Core"},{"location":"core/#core","text":"","title":"Core"},{"location":"core/#coreactor","text":"","title":"core.Actor"},{"location":"core/#variables","text":"name : str properties : dict started = bool scene : core.Scene # Transform properties position : math.Vector2 scale : math.Vector2 rotation : int # Sprite properties image : str color : tuple zIndex : int","title":"Variables"},{"location":"core/#methods","text":"__init__([optional] name : str) # components add(*component : core.Component) get(component : str) -> core.Component remove(component : str) # tag addTag(tag : str) hasTag(tag : str) -> bool removeTag(tag : str) getId() -> int start() update() end()","title":"Methods"},{"location":"core/#coreassetmanager","text":"","title":"core.AssetManager"},{"location":"core/#variables_1","text":"","title":"Variables"},{"location":"core/#methods_1","text":"# image loadImage(name : str, filePath : str) getImage(name : str) -> pygame.Surface deleteImage(name : str) # sound loadSound(name : str, filePath : str) getSound(name : str) -> pygame.mixer.Sound deleteSound(name : str)","title":"Methods"},{"location":"core/#corecomponent","text":"","title":"core.Component"},{"location":"core/#variables_2","text":"name : str args : dict actor : core.Actor","title":"Variables"},{"location":"core/#methods_2","text":"__init__(name : str, [optional] args : dict) start() update()","title":"Methods"},{"location":"core/#corescene","text":"","title":"core.Scene"},{"location":"core/#variables_3","text":"name : str window : core.Window background : tuple","title":"Variables"},{"location":"core/#methods_3","text":"__init__([optional], name : str) # actor add(*actor : core.Actor) remove(actorId : int) get(actorId : int) -> core.Actor get(name : str) -> core.Actor getActors() -> list [core.Actor] start() update()","title":"Methods"},{"location":"core/#corewindow","text":"","title":"core.Window"},{"location":"core/#variables_4","text":"assets : core.AssetManager fps : 60 pygameEvents : list [pygame.event] mouse : input.Mouse keyboard : input.Keyboard","title":"Variables"},{"location":"core/#methods_4","text":"__init__(assets : core.AssetManager) # scene setScene(scene : core.Scene) getScene() -> core.Scene # sound playSound(name : str, volume : float) stopSound(name : str) create(width : int, height : int, title : str, [optional] flags : int) events() update() render() mainLoop()","title":"Methods"},{"location":"input/","text":"Input input.Keyboard Variables Methods pressed(key : str) keyDown(key : str) update() input.Mouse Variables Methods getPosition() -> math.Vector2 pressed(button : int) click(button : int) update()","title":"Input"},{"location":"input/#input","text":"","title":"Input"},{"location":"input/#inputkeyboard","text":"","title":"input.Keyboard"},{"location":"input/#variables","text":"","title":"Variables"},{"location":"input/#methods","text":"pressed(key : str) keyDown(key : str) update()","title":"Methods"},{"location":"input/#inputmouse","text":"","title":"input.Mouse"},{"location":"input/#variables_1","text":"","title":"Variables"},{"location":"input/#methods_1","text":"getPosition() -> math.Vector2 pressed(button : int) click(button : int) update()","title":"Methods"},{"location":"math/","text":"Math math.Vector2 Variables x : float y : float Methods __init__([optinal] x : float, y : float) add(vector2 : math.Vector2) subtract(vector2 : math.Vector2) multiply(scalar : float) divide(scalar : float) setValues(x : float, y : float) length() -> float lengthSquared() -> float normalize() isNormalized() -> bool dot(vector2 : math.Vector2) -> float cross(vector2 : math.Vector2) -> float lerp(vector2 : math.Vector2, value : float) -> math.Vector2 rotate(degrees : int) rotateRad(radians : int) copy() -> math.Vector2 zero()","title":"Math"},{"location":"math/#math","text":"","title":"Math"},{"location":"math/#mathvector2","text":"","title":"math.Vector2"},{"location":"math/#variables","text":"x : float y : float","title":"Variables"},{"location":"math/#methods","text":"__init__([optinal] x : float, y : float) add(vector2 : math.Vector2) subtract(vector2 : math.Vector2) multiply(scalar : float) divide(scalar : float) setValues(x : float, y : float) length() -> float lengthSquared() -> float normalize() isNormalized() -> bool dot(vector2 : math.Vector2) -> float cross(vector2 : math.Vector2) -> float lerp(vector2 : math.Vector2, value : float) -> math.Vector2 rotate(degrees : int) rotateRad(radians : int) copy() -> math.Vector2 zero()","title":"Methods"},{"location":"renderer/","text":"Renderer renderer.Renderer Variables Methods render()","title":"Renderer"},{"location":"renderer/#renderer","text":"","title":"Renderer"},{"location":"renderer/#rendererrenderer","text":"","title":"renderer.Renderer"},{"location":"renderer/#variables","text":"","title":"Variables"},{"location":"renderer/#methods","text":"render()","title":"Methods"}]}